{"version":3,"file":"index.cjs.min.js","sources":["../../src/index.js"],"sourcesContent":["export default {\n\tname: 'new',\n\n\tinit(jsep) {\n\t\tjsep.addUnaryOp('new');\n\n\t\tjsep.hooks.add('after-token', function gobbleNew(env) {\n\t\t\tconst node = env.node;\n\t\t\tif (node && node.operator === 'new') {\n\t\t\t\tif (!node.argument || ![jsep.CALL_EXP, jsep.MEMBER_EXP].includes(node.argument.type)) {\n\t\t\t\t\tthis.throwError('Expected new function()');\n\t\t\t\t}\n\t\t\t\tenv.node = node.argument;\n\n\t\t\t\t// Change CALL_EXP to NewExpression (could be a nested member, even within a call expr)\n\t\t\t\tlet callNode = env.node;\n\t\t\t\twhile (callNode.type === jsep.MEMBER_EXP || (\n\t\t\t\t\tcallNode.type === jsep.CALL_EXP && callNode.callee.type === jsep.MEMBER_EXP)) {\n\t\t\t\t\tcallNode = callNode.type === jsep.MEMBER_EXP\n\t\t\t\t\t\t? callNode.object\n\t\t\t\t\t\t: callNode.callee.object;\n\t\t\t\t}\n\t\t\t\tcallNode.type = 'NewExpression';\n\t\t\t}\n\t\t});\n\t}\n};\n"],"names":["name","init","jsep","addUnaryOp","hooks","add","env","node","operator","argument","CALL_EXP","MEMBER_EXP","includes","type","this","throwError","callNode","callee","object"],"mappings":"aAAA,MAAe,CACdA,KAAM,MAENC,KAAKC,GACJA,EAAKC,WAAW,OAEhBD,EAAKE,MAAMC,IAAI,eAAe,SAAmBC,GAChD,MAAMC,EAAOD,EAAIC,KACjB,GAAIA,GAA0B,QAAlBA,EAAKC,SAAoB,CAC/BD,EAAKE,UAAa,CAACP,EAAKQ,SAAUR,EAAKS,YAAYC,SAASL,EAAKE,SAASI,OAC9EC,KAAKC,WAAW,2BAEjBT,EAAIC,KAAOA,EAAKE,SAGhB,IAAIO,EAAWV,EAAIC,KACnB,KAAOS,EAASH,OAASX,EAAKS,YAC7BK,EAASH,OAASX,EAAKQ,UAAYM,EAASC,OAAOJ,OAASX,EAAKS,YACjEK,EAAWA,EAASH,OAASX,EAAKS,WAC/BK,EAASE,OACTF,EAASC,OAAOC,OAEpBF,EAASH,KAAO"}