"use strict";var i={name:"numbers",init(i){function t(i){return"x"===i||"X"===i?(this.index+=2,[[48,57],[65,70],[97,102]]):"b"===i||"B"===i?(this.index+=2,[[48,49]]):"o"===i||"O"===i||i>="0"&&i<="7"?(this.index+=i<="7"?1:2,[[48,55]]):null}function e(i){return"x"===i||"X"===i?16:"b"===i||"B"===i?2:8}function s(i,t){return 95===i||t.some((([t,e])=>i>=t&&i<=e))}function r(t){const e=this.index;let s="";const r=()=>{for(;i.isDecimalDigit(this.code)||95===this.code;)95===this.code?this.index++:s+=this.expr.charAt(this.index++)};r(),this.code===i.PERIOD_CODE&&(s+=this.expr.charAt(this.index++),r());let h=this.char;"e"!==h&&"E"!==h||(s+=this.expr.charAt(this.index++),h=this.char,"+"!==h&&"-"!==h||(s+=this.expr.charAt(this.index++)),r(),i.isDecimalDigit(this.expr.charCodeAt(this.index-1))||this.throwError("Expected exponent ("+s+this.char+")"));const n=this.code;if(i.isIdentifierStart(n))this.throwError("Variable names cannot start with a number ("+s+this.char+")");else if(n===i.PERIOD_CODE)return s.length>1&&this.throwError(`Unexpected period ${JSON.stringify({chCode:n,number:s},null,2)}`),void(this.index=e);t.node={type:i.LITERAL,value:parseFloat(s),raw:this.expr.substring(e,this.index)}}i.hooks.add("gobble-token",(function(h){if(48===this.code){const n=this.index,o=this.expr.charAt(this.index+1),c=t.call(this,o);if(!c)return;let d="";for(;s(this.code,c);)95===this.code?this.index++:d+=this.expr.charAt(this.index++);if(i.isIdentifierPart(this.code)){if(i.isDecimalDigit(this.code)&&i.isDecimalDigit(o.charCodeAt(0)))return this.index=n+1,void r.call(this,h);this.throwError("unexpected char within number")}h.node={type:i.LITERAL,value:parseInt(d,e(o)),raw:this.expr.substring(n,this.index)}}else(i.isDecimalDigit(this.code)||this.code===i.PERIOD_CODE)&&r.call(this,h)}))}};module.exports=i;
//# sourceMappingURL=index.cjs.min.js.map
