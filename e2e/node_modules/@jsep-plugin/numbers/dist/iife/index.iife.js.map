{"version":3,"file":"index.iife.js","sources":["../../src/index.js"],"sourcesContent":["const NUM_0_CODE = 48;\nconst UNDERSCORE = 95;\n\nexport default {\n\tname: 'numbers',\n\n\tinit(Jsep) {\n\t\tJsep.hooks.add('gobble-token', function gobbleNumber(env) {\n\t\t\tif (this.code === NUM_0_CODE) {\n\t\t\t\tconst startIndex = this.index;\n\t\t\t\tconst numType = this.expr.charAt(this.index + 1);\n\t\t\t\tconst ranges = getNumberCodeRanges.call(this, numType);\n\t\t\t\tif (!ranges) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet number = '';\n\t\t\t\twhile (isUnderscoreOrWithinRange(this.code, ranges)) {\n\t\t\t\t\tif (this.code === UNDERSCORE) {\n\t\t\t\t\t\tthis.index ++;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnumber += this.expr.charAt(this.index++);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// confirm valid syntax after building number string within ranges\n\t\t\t\tif (Jsep.isIdentifierPart(this.code)) {\n\t\t\t\t\tif (Jsep.isDecimalDigit(this.code) && Jsep.isDecimalDigit(numType.charCodeAt(0))) {\n\t\t\t\t\t\t// abort octal processing and reset to ignore the leading 0\n\t\t\t\t\t\tthis.index = startIndex + 1;\n\t\t\t\t\t\tgobbleBase10.call(this, env);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.throwError('unexpected char within number');\n\t\t\t\t}\n\n\t\t\t\tenv.node = {\n\t\t\t\t\ttype: Jsep.LITERAL,\n\t\t\t\t\tvalue: parseInt(number, getNumberBase(numType)),\n\t\t\t\t\traw: this.expr.substring(startIndex, this.index),\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (Jsep.isDecimalDigit(this.code) || this.code === Jsep.PERIOD_CODE) {\n\t\t\t\tgobbleBase10.call(this, env);\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * Gets the range of allowable number codes (decimal) and updates index\n\t\t * @param {string} numType\n\t\t * @returns {number[][]|null}\n\t\t */\n\t\tfunction getNumberCodeRanges(numType) {\n\t\t\tif (numType === 'x' || numType === 'X') {\n\t\t\t\tthis.index += 2;\n\t\t\t\treturn [\n\t\t\t\t\t[48, 57], // 0-9\n\t\t\t\t\t[65, 70], // A-F\n\t\t\t\t\t[97, 102], // a-f\n\t\t\t\t];\n\t\t\t}\n\t\t\telse if (numType === 'b' || numType === 'B') {\n\t\t\t\tthis.index += 2;\n\t\t\t\treturn [[48, 49]]; // 0-1\n\t\t\t}\n\t\t\telse if (numType === 'o' || numType === 'O' ||\n\t\t\t\t(numType >= '0' && numType <= '7')) { // 0-7 allows non-standard 0644 = 420\n\t\t\t\tthis.index += numType <= '7' ? 1 : 2;\n\t\t\t\treturn [[48, 55]]; // 0-7\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n\t\t * Supports Hex, Octal and Binary only\n\t\t * @param {string} numType\n\t\t * @returns {16|8|2}\n\t\t */\n\t\tfunction getNumberBase(numType) {\n\t\t\tif (numType === 'x' || numType === 'X') {\n\t\t\t\treturn 16;\n\t\t\t}\n\t\t\telse if (numType === 'b' || numType === 'B') {\n\t\t\t\treturn 2;\n\t\t\t}\n\t\t\t// default (includes non-stand 044)\n\t\t\treturn 8;\n\t\t}\n\n\t\t/**\n\t\t * Verifies number code is within given ranges\n\t\t * @param {number} code\n\t\t * @param {number[][]} ranges\n\t\t */\n\t\tfunction isUnderscoreOrWithinRange(code, ranges) {\n\t\t\treturn code === UNDERSCORE ||\n\t\t\t\tranges.some(([min, max]) => code >= min && code <= max);\n\t\t}\n\n\t\t/**\n\t\t * Same as core gobbleNumericLiteral, but allows for _ char\n\t\t * @param {{ context?: typeof Jsep, node?: Expression }} env\n\t\t */\n\t\tfunction gobbleBase10(env) {\n\t\t\tconst startIndex = this.index;\n\t\t\tlet number = '';\n\n\t\t\tconst gobbleDigits = () => {\n\t\t\t\twhile (Jsep.isDecimalDigit(this.code) || this.code === UNDERSCORE) {\n\t\t\t\t\tif (this.code === UNDERSCORE) {\n\t\t\t\t\t\tthis.index++;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnumber += this.expr.charAt(this.index++);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tgobbleDigits();\n\t\t\tif (this.code === Jsep.PERIOD_CODE) { // can start with a decimal marker\n\t\t\t\tnumber += this.expr.charAt(this.index++);\n\n\t\t\t\tgobbleDigits();\n\t\t\t}\n\n\t\t\tlet ch = this.char;\n\t\t\tif (ch === 'e' || ch === 'E') { // exponent marker\n\t\t\t\tnumber += this.expr.charAt(this.index++);\n\t\t\t\tch = this.char;\n\n\t\t\t\tif (ch === '+' || ch === '-') { // exponent sign\n\t\t\t\t\tnumber += this.expr.charAt(this.index++);\n\t\t\t\t}\n\n\t\t\t\tgobbleDigits(); // exponent itself\n\n\t\t\t\tif (!Jsep.isDecimalDigit(this.expr.charCodeAt(this.index - 1)) ) {\n\t\t\t\t\tthis.throwError('Expected exponent (' + number + this.char + ')');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst chCode = this.code;\n\n\t\t\t// Check to make sure this isn't a variable name that start with a number (123abc)\n\t\t\tif (Jsep.isIdentifierStart(chCode)) {\n\t\t\t\tthis.throwError('Variable names cannot start with a number (' +\n\t\t\t\t\tnumber + this.char + ')');\n\t\t\t}\n\t\t\telse if (chCode === Jsep.PERIOD_CODE) {\n\t\t\t\tif (number.length > 1) {\n\t\t\t\t\tthis.throwError(`Unexpected period ${JSON.stringify({ chCode, number }, null, 2)}`);\n\t\t\t\t}\n\t\t\t\t// leave other error-handling to jsep core. Also allows spread operator.\n\t\t\t\tthis.index = startIndex;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tenv.node = {\n\t\t\t\ttype: Jsep.LITERAL,\n\t\t\t\tvalue: parseFloat(number),\n\t\t\t\traw: this.expr.substring(startIndex, this.index),\n\t\t\t};\n\t\t}\n\t}\n};\n"],"names":[],"mappings":"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"}