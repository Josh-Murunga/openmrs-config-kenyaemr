{"version":3,"file":"openmrs-esm-module-config.js","mappings":"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","sources":["webpack://@openmrs/esm-config/external system \"@openmrs/esm-state\"","webpack://@openmrs/esm-config/external system \"@openmrs/esm-utils\"","webpack://@openmrs/esm-config/webpack/bootstrap","webpack://@openmrs/esm-config/webpack/runtime/define property getters","webpack://@openmrs/esm-config/webpack/runtime/hasOwnProperty shorthand","webpack://@openmrs/esm-config/webpack/runtime/make namespace object","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/internal/_isPlaceholder.js","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/internal/_curry1.js","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/internal/_curry2.js","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/internal/_arrayFromIterator.js","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/internal/_includesWith.js","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/internal/_has.js","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/internal/_objectIs.js","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/internal/_isArguments.js","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/keys.js","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/type.js","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/internal/_equals.js","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/internal/_functionName.js","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/equals.js","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/internal/_curry3.js","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/internal/_isObject.js","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/mergeWithKey.js","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/mergeDeepWithKey.js","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/mergeDeepRight.js","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/omit.js","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/internal/_clone.js","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/internal/_cloneRegExp.js","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/clone.js","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/internal/_isArray.js","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/internal/_isArrayLike.js","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/internal/_isString.js","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/internal/_xwrap.js","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/bind.js","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/internal/_arity.js","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/internal/_reduce.js","webpack://@openmrs/esm-config/../../../node_modules/ramda/es/reduce.js","webpack://@openmrs/esm-config/./src/types.ts","webpack://@openmrs/esm-config/./src/validators/validator.ts","webpack://@openmrs/esm-config/./src/validators/type-validators.ts","webpack://@openmrs/esm-config/./src/module-config/state.ts","webpack://@openmrs/esm-config/./src/module-config/module-config.ts","webpack://@openmrs/esm-config/./src/validators/validators.ts"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__685__;","module.exports = __WEBPACK_EXTERNAL_MODULE__618__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default function _isPlaceholder(a) {\n       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _isPlaceholder from './_isPlaceholder.js';\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","import _curry1 from './_curry1.js';\nimport _isPlaceholder from './_isPlaceholder.js';\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n}","export default function _includesWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\n\nexport default typeof Object.is === 'function' ? Object.is : _objectIs;","import _has from './_has.js';\n\nvar toString = Object.prototype.toString;\nvar _isArguments = /*#__PURE__*/function () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\n\nexport default _isArguments;","import _curry1 from './internal/_curry1.js';\nimport _has from './internal/_has.js';\nimport _isArguments from './internal/_isArguments.js';\n\n// cover IE < 9 keys issues\nvar hasEnumBug = ! /*#__PURE__*/{ toString: null }.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n// Safari bug\nvar hasArgsEnumBug = /*#__PURE__*/function () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? /*#__PURE__*/_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) : /*#__PURE__*/_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n  var prop, nIdx;\n  var ks = [];\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n      nIdx -= 1;\n    }\n  }\n  return ks;\n});\nexport default keys;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\nvar type = /*#__PURE__*/_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\nexport default type;","import _arrayFromIterator from './_arrayFromIterator.js';\nimport _includesWith from './_includesWith.js';\nimport _functionName from './_functionName.js';\nimport _has from './_has.js';\nimport _objectIs from './_objectIs.js';\nimport keys from '../keys.js';\nimport type from '../type.js';\n\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  }\n\n  // if *a* array contains any element that is not included in *b*\n  return !_includesWith(function (b, aItem) {\n    return !_includesWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (_objectIs(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!_objectIs(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n  }\n\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  return true;\n}","export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","import _curry2 from './internal/_curry2.js';\nimport _equals from './internal/_equals.js';\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\nvar equals = /*#__PURE__*/_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\nexport default equals;","import _curry1 from './_curry1.js';\nimport _curry2 from './_curry2.js';\nimport _isPlaceholder from './_isPlaceholder.js';\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}","export default function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}","import _curry3 from './internal/_curry3.js';\nimport _has from './internal/_has.js';\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\nvar mergeWithKey = /*#__PURE__*/_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\nexport default mergeWithKey;","import _curry3 from './internal/_curry3.js';\nimport _isObject from './internal/_isObject.js';\nimport mergeWithKey from './mergeWithKey.js';\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWithKey = /*#__PURE__*/_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\nexport default mergeDeepWithKey;","import _curry2 from './internal/_curry2.js';\nimport mergeDeepWithKey from './mergeDeepWithKey.js';\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\nvar mergeDeepRight = /*#__PURE__*/_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\nexport default mergeDeepRight;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\nvar omit = /*#__PURE__*/_curry2(function omit(names, obj) {\n  var result = {};\n  var index = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    index[names[idx]] = 1;\n    idx += 1;\n  }\n\n  for (var prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nexport default omit;","import _cloneRegExp from './_cloneRegExp.js';\nimport type from '../type.js';\n\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\nexport default function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n      idx += 1;\n    }\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n    for (var key in value) {\n      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n    return copiedValue;\n  };\n  switch (type(value)) {\n    case 'Object':\n      return copy({});\n    case 'Array':\n      return copy([]);\n    case 'Date':\n      return new Date(value.valueOf());\n    case 'RegExp':\n      return _cloneRegExp(value);\n    default:\n      return value;\n  }\n}","export default function _cloneRegExp(pattern) {\n                                  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n}","import _clone from './internal/_clone.js';\nimport _curry1 from './internal/_curry1.js';\n\n/**\n * Creates a deep copy of the value which may contain (nested) `Array`s and\n * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n * assigned by reference rather than copied\n *\n * Dispatches to a `clone` method if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      const objects = [{}, {}, {}];\n *      const objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\nvar clone = /*#__PURE__*/_curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\n});\nexport default clone;","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","import _curry1 from './_curry1.js';\nimport _isArray from './_isArray.js';\nimport _isString from './_isString.js';\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\nvar _isArrayLike = /*#__PURE__*/_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n  if (!x) {\n    return false;\n  }\n  if (typeof x !== 'object') {\n    return false;\n  }\n  if (_isString(x)) {\n    return false;\n  }\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n  if (x.length === 0) {\n    return true;\n  }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\nexport default _isArrayLike;","export default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}","var XWrap = /*#__PURE__*/function () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}","import _arity from './internal/_arity.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      const log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nvar bind = /*#__PURE__*/_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\nexport default bind;","export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}","import _isArrayLike from './_isArrayLike.js';\nimport _xwrap from './_xwrap.js';\nimport bind from '../bind.js';\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    idx += 1;\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    step = iter.next();\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}","import _curry3 from './internal/_curry3.js';\nimport _reduce from './internal/_reduce.js';\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\nvar reduce = /*#__PURE__*/_curry3(_reduce);\nexport default reduce;","export enum Type {\n  Array = 'Array',\n  Boolean = 'Boolean',\n  ConceptUuid = 'ConceptUuid',\n  Number = 'Number',\n  Object = 'Object',\n  String = 'String',\n  UUID = 'UUID',\n  PersonAttributeTypeUuid = 'PersonAttributeTypeUuid',\n  PatientIdentifierTypeUuid = 'PatientIdentifierTypeUuid',\n}\n\n// Full-powered typing for Config and Schema trees depends on being able to\n// have types like `string not \"_default\"`. There is an experimental PR\n// for this feature, https://github.com/microsoft/TypeScript/pull/29317\n// But it is not likely to be merged any time terribly soon. (Nov 11, 2020)\nexport interface ConfigSchema {\n  [key: string]: ConfigSchema | ConfigValue;\n  _type?: Type;\n  _validators?: Array<Validator>;\n  _elements?: ConfigSchema;\n}\n\nexport interface Config {\n  [moduleName: string]: { [key: string]: any };\n}\n\nexport interface ConfigObject {\n  [key: string]: any;\n  /** Options that control when this extension is displayed  */\n  'Display conditions'?: DisplayConditionsConfigObject;\n  'Translation overrides'?: Record<string, Record<string, string>>;\n}\n\nexport interface DisplayConditionsConfigObject {\n  /** The privileges a user should have to see this extension */\n  privileges?: string[];\n  /** An expression to evaluate whether or not the user should see this extension */\n  expression?: string;\n  /** Whether to display this extension when connected to the server */\n  online?: boolean;\n  /** Whether to display this extension when not connected to the server */\n  offline?: boolean;\n}\n\nexport type ConfigValue = string | number | boolean | void | Array<any> | object;\n\nexport interface ExtensionSlotConfig {\n  add?: Array<string>;\n  remove?: Array<string>;\n  order?: Array<string>;\n  configure?: ExtensionSlotConfigureValueObject;\n}\n\nexport interface ExtensionSlotConfigureValueObject {\n  [key: string]: object;\n}\n\nexport interface ExtensionSlotConfigObject {\n  /** Additional extension IDs to assign to this slot, in addition to those `attach`ed in code. */\n  add?: Array<string>;\n  /** Extension IDs which were `attach`ed to the slot but which should not be assigned. */\n  remove?: Array<string>;\n  /** Overrides the default ordering of extensions. */\n  order?: Array<string>;\n}\n\nexport type ProvidedConfig = {\n  source: string;\n  config: Config;\n};\n\nexport type ValidatorFunction = (value: any) => boolean;\n\nexport type Validator = (value: any) => void | string;\n","/** @module @category Config Validation */\nimport type { Validator, ValidatorFunction } from '../types';\n\n/**\n * Constructs a custom validator.\n *\n * ### Example\n *\n * ```typescript\n * {\n *   foo: {\n *     _default: 0,\n *     _validators: [\n *       validator(val => val >= 0, \"Must not be negative.\")\n *     ]\n *   }\n * }\n * ```\n * @param validationFunction Takes the configured value as input. Returns true\n *    if it is valid, false otherwise.\n * @param message A string message that explains why the value is invalid. Can\n *    also be a function that takes the value as input and returns a string.\n * @returns A validator ready for use in a config schema\n */\nexport function validator(\n  validationFunction: ValidatorFunction,\n  message: string | ((value: any) => string),\n): Validator {\n  return (value) => {\n    if (!validationFunction(value)) {\n      if (typeof message === 'function') {\n        return message(value);\n      } else {\n        return message;\n      }\n    }\n  };\n}\n","import { validator } from './validator';\n\nexport const isArray = validator((val) => Array.isArray(val), 'must be an array');\n\nexport const isBoolean = validator((val) => typeof val === 'boolean', 'must be a boolean');\n\nexport const isNumber = validator((val) => typeof val === 'number', 'must be a number');\n\nexport const isString = validator((val) => typeof val === 'string', 'must be a string');\n\nexport const isObject = validator(\n  (val) => typeof val === 'object' && !Array.isArray(val) && val !== null,\n  'must be an object (not an array or null)',\n);\n\nexport const isUuid = validator(\n  (val) => /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(val) || /^[0-9a-f]{36}$/i.test(val),\n  'must be a valid UUID or a 36-character hexadecimal string',\n);\n","/** @module @category Config */\nimport { createGlobalStore, getGlobalStore } from '@openmrs/esm-state';\nimport { shallowEqual } from '@openmrs/esm-utils';\nimport { type StoreApi } from 'zustand';\nimport type { Config, ConfigObject, ConfigSchema, ExtensionSlotConfigObject, ProvidedConfig } from '../types';\n\n/**\n * Internal store\n *   A store of the inputs and internal state\n * @internal\n */\nexport interface ConfigInternalStore {\n  /** Configs added using the `provide` function */\n  providedConfigs: Array<ProvidedConfig>;\n  /** An object with module names for keys and schemas for values */\n  schemas: Record<string, ConfigSchema>;\n  /**\n   * Before modules are loaded, they get implicit schemas added to `schemas`. Therefore\n   * we need to track separately whether they have actually been loaded (that is,\n   * whether the schema has actually been defined).\n   */\n  moduleLoaded: Record<string, boolean>;\n}\n\nconst configInternalStoreInitialValue = {\n  providedConfigs: [],\n  schemas: {},\n  moduleLoaded: {},\n};\n\n/**\n * @internal\n */\nexport const configInternalStore = createGlobalStore<ConfigInternalStore>(\n  'config-internal',\n  configInternalStoreInitialValue,\n);\n\n/**\n * Temporary config\n *   LocalStorage-based config used by the implementer tools\n * @internal\n */\nexport interface TemporaryConfigStore {\n  config: Config;\n}\n\n/** @internal */\nexport const temporaryConfigStore = createGlobalStore<TemporaryConfigStore>('temporary-config', {\n  config: getTemporaryConfig(),\n});\n\ntemporaryConfigStore.subscribe((state) => {\n  setTemporaryConfig(state.config);\n});\n\nfunction setTemporaryConfig(value: Config) {\n  localStorage.setItem('openmrs:temporaryConfig', JSON.stringify(value));\n}\n\nfunction getTemporaryConfig(): Config {\n  try {\n    return JSON.parse(localStorage.getItem('openmrs:temporaryConfig') || '{}');\n  } catch (e) {\n    return {};\n  }\n}\n\n/**\n * Config-side extension store\n *   Just what esm-config needs to know about extension state. This\n *   is to avoid having esm-config depend on esm-extensions, which would\n *   create a circular dependency.\n * @internal\n */\nexport interface ConfigExtensionStore {\n  mountedExtensions: Array<ConfigExtensionStoreElement>;\n}\n\n/** @internal */\nexport interface ConfigExtensionStoreElement {\n  slotModuleName: string;\n  extensionModuleName: string;\n  slotName: string;\n  extensionId: string;\n}\n\n/** @internal */\nexport const configExtensionStore = createGlobalStore<ConfigExtensionStore>('config-store-of-extension-state', {\n  mountedExtensions: [],\n});\n\n/**\n * Output configs\n *\n * Each module has its own stores for its config and its extension slots' configs.\n * @internal\n */\nexport interface ConfigStore {\n  config: ConfigObject | null;\n  loaded: boolean;\n  translationOverridesLoaded: boolean;\n}\n\nfunction initializeConfigStore() {\n  return {\n    config: null,\n    loaded: false,\n    translationOverridesLoaded: false,\n  };\n}\n\n/** @internal */\nexport function getConfigStore(moduleName: string) {\n  // We use a store for each module's config, named `config-${moduleName}`\n  return getGlobalStore<ConfigStore>(`config-module-${moduleName}`, initializeConfigStore());\n}\n\n/**\n * Configuration for all the specific extension slots\n * @internal\n */\nexport interface ExtensionSlotsConfigStore {\n  slots: {\n    [slotName: string]: {\n      config: ExtensionSlotConfigObject;\n      loaded: boolean;\n    };\n  };\n}\n\n/** @internal */\nexport function getExtensionSlotsConfigStore() {\n  return getGlobalStore<ExtensionSlotsConfigStore>(`config-extension-slots`, {\n    slots: {},\n  });\n}\n\n/** @internal */\nexport function getExtensionSlotConfig(slotName: string) {\n  return getExtensionSlotConfigFromStore(getExtensionSlotsConfigStore().getState(), slotName);\n}\n\n/** @internal */\nexport function getExtensionSlotConfigFromStore(state: ExtensionSlotsConfigStore, slotName: string) {\n  const slotConfig = state.slots[slotName];\n  return slotConfig ?? { loaded: false, config: {} };\n}\n\n/** @internal */\nexport interface ExtensionsConfigStore {\n  configs: {\n    [slotName: string]: {\n      [extensionId: string]: ConfigStore;\n    };\n  };\n}\n\n/**\n * One store for all the extensions\n * @internal\n */\nexport function getExtensionsConfigStore() {\n  return getGlobalStore<ExtensionsConfigStore>(`config-extensions`, {\n    configs: {},\n  });\n}\n\n/** @internal */\nexport function getExtensionConfig(\n  slotName: string,\n  extensionId: string,\n): StoreApi<Omit<ConfigStore, 'translationOverridesLoaded'>> {\n  if (\n    typeof slotName !== 'string' ||\n    typeof extensionId !== 'string' ||\n    slotName === '__proto__' ||\n    extensionId === '__proto__' ||\n    slotName === 'constructor' ||\n    extensionId === 'constructor' ||\n    slotName === 'prototype' ||\n    extensionId === 'prototype'\n  ) {\n    throw new Error('Attempted to call `getExtensionConfig()` with invalid argument');\n  }\n\n  const extensionConfigStore = getExtensionsConfigStore();\n  const selector = (configStore: ExtensionsConfigStore) => configStore.configs[slotName]?.[extensionId];\n\n  return {\n    getInitialState() {\n      return selector(extensionConfigStore.getInitialState());\n    },\n    getState() {\n      return selector(extensionConfigStore.getState()) ?? { loaded: false, config: null };\n    },\n    setState(\n      partial: ConfigStore | Partial<ConfigStore> | ((state: ConfigStore) => ConfigStore | Partial<ConfigStore>),\n      replace: boolean = false,\n    ) {\n      extensionConfigStore.setState((state) => {\n        if (!state.configs[slotName]) {\n          state.configs[slotName] = {};\n        }\n\n        const newState = typeof partial === 'function' ? partial(state.configs.slotName[extensionId]) : partial;\n        if (replace) {\n          state.configs[slotName][extensionId] = Object.assign({}, newState) as ConfigStore;\n        } else {\n          state.configs[slotName][extensionId] = Object.assign({}, state.configs[slotName][extensionId], newState);\n        }\n\n        return state;\n      });\n    },\n    subscribe(listener) {\n      return extensionConfigStore.subscribe((state, prevState) => {\n        const newState = selector(state);\n        const oldState = selector(prevState);\n\n        if (!shallowEqual(newState, oldState)) {\n          listener(newState, oldState);\n        }\n      });\n    },\n    destroy() {\n      /* this is a no-op */\n    },\n  };\n}\n\n/** @internal */\nexport function getExtensionConfigFromStore(state: ExtensionsConfigStore, slotName: string, extensionId: string) {\n  const extensionConfig = state.configs[slotName]?.[extensionId];\n  return extensionConfig ?? { loaded: false, config: null };\n}\n\n/**\n * A store of the implementer tools output config\n * @internal\n */\nexport interface ImplementerToolsConfigStore {\n  config: Config;\n}\n\n/** @internal */\nexport const implementerToolsConfigStore = createGlobalStore<ImplementerToolsConfigStore>('config-implementer-tools', {\n  config: {},\n});\n","/** @module @category Config */\nimport { clone, reduce, mergeDeepRight, equals, omit } from 'ramda';\nimport type { Config, ConfigObject, ConfigSchema, ExtensionSlotConfig, ExtensionSlotConfigObject } from '../types';\nimport { Type } from '../types';\nimport { isArray, isBoolean, isUuid, isNumber, isObject, isString } from '../validators/type-validators';\nimport { validator } from '../validators/validator';\nimport { type ConfigExtensionStore, type ConfigInternalStore, type ConfigStore } from './state';\nimport {\n  configInternalStore,\n  configExtensionStore,\n  getConfigStore,\n  getExtensionConfig,\n  getExtensionsConfigStore,\n  implementerToolsConfigStore,\n  temporaryConfigStore,\n  getExtensionSlotsConfigStore,\n} from './state';\nimport type {} from '@openmrs/esm-globals';\nimport { type TemporaryConfigStore } from '..';\n\n/**\n * Store setup\n *\n *\n * Set up stores and subscriptions so that inputs get processed appropriately.\n *\n * There are *input* stores and *output* stores. The *input* stores\n * are configInternalStore, temporaryConfigStore, and configExtensionStore. The\n * output stores are set in the `compute...` functions. They are the module\n * config stores, the extension slot config stores (by module), the extension\n * config stores, and the implementer tools config store.\n *\n * This code sets up the subscriptions so that when an input store changes,\n * the correct set of output stores are updated.\n *\n * All `compute...` functions except `computeExtensionConfigs` are pure\n * (or are supposed to be), other than the fact that they all `setState`\n * store values at the end. `computeExtensionConfigs` calls `getGlobalStore`,\n * which creates stores.\n */\ncomputeModuleConfig(configInternalStore.getState(), temporaryConfigStore.getState());\nconfigInternalStore.subscribe((configState) => computeModuleConfig(configState, temporaryConfigStore.getState()));\ntemporaryConfigStore.subscribe((tempConfigState) =>\n  computeModuleConfig(configInternalStore.getState(), tempConfigState),\n);\n\ncomputeImplementerToolsConfig(configInternalStore.getState(), temporaryConfigStore.getState());\nconfigInternalStore.subscribe((configState) =>\n  computeImplementerToolsConfig(configState, temporaryConfigStore.getState()),\n);\ntemporaryConfigStore.subscribe((tempConfigState) =>\n  computeImplementerToolsConfig(configInternalStore.getState(), tempConfigState),\n);\n\ncomputeExtensionSlotConfigs(configInternalStore.getState(), temporaryConfigStore.getState());\nconfigInternalStore.subscribe((configState) =>\n  computeExtensionSlotConfigs(configState, temporaryConfigStore.getState()),\n);\ntemporaryConfigStore.subscribe((tempConfigState) =>\n  computeExtensionSlotConfigs(configInternalStore.getState(), tempConfigState),\n);\n\ncomputeExtensionConfigs(\n  configInternalStore.getState(),\n  configExtensionStore.getState(),\n  temporaryConfigStore.getState(),\n);\nconfigInternalStore.subscribe((configState) => {\n  computeExtensionConfigs(configState, configExtensionStore.getState(), temporaryConfigStore.getState());\n});\nconfigExtensionStore.subscribe((extensionState) => {\n  computeExtensionConfigs(configInternalStore.getState(), extensionState, temporaryConfigStore.getState());\n});\ntemporaryConfigStore.subscribe((tempConfigState) => {\n  computeExtensionConfigs(configInternalStore.getState(), configExtensionStore.getState(), tempConfigState);\n});\n\nfunction computeModuleConfig(state: ConfigInternalStore, tempState: TemporaryConfigStore) {\n  for (let moduleName of Object.keys(state.schemas)) {\n    // At this point the schema could be either just the implicit schema or the actually\n    // defined schema. We run with just the implicit schema because we want to populate\n    // the config store with the translation overrides as soon as possible. In fact, the\n    // translation system will throw for Suspense until the translation overrides are\n    // available, which as of this writing blocks the schema definition from occurring\n    // for modules loaded based on their extensions.\n    const moduleStore = getConfigStore(moduleName);\n    if (state.moduleLoaded[moduleName]) {\n      const config = getConfigForModule(moduleName, state, tempState);\n      moduleStore.setState({\n        translationOverridesLoaded: true,\n        loaded: true,\n        config,\n      });\n    } else {\n      const config = getConfigForModuleImplicitSchema(moduleName, state, tempState);\n      moduleStore.setState({\n        translationOverridesLoaded: true,\n        loaded: false,\n        config,\n      });\n    }\n  }\n}\n\nfunction computeExtensionSlotConfigs(state: ConfigInternalStore, tempState: TemporaryConfigStore) {\n  const slotConfigs = getExtensionSlotConfigs(state, tempState);\n  const newSlotStoreEntries = Object.fromEntries(\n    Object.entries(slotConfigs).map(([slotName, config]) => [slotName, { loaded: true, config }]),\n  );\n  const slotStore = getExtensionSlotsConfigStore();\n  const oldState = slotStore.getState();\n  const newState = { slots: { ...oldState.slots, ...newSlotStoreEntries } };\n  if (!equals(oldState, newState)) {\n    slotStore.setState(newState);\n  }\n}\n\nfunction computeImplementerToolsConfig(state: ConfigInternalStore, tempConfigState: TemporaryConfigStore) {\n  const config = getImplementerToolsConfig(state, tempConfigState);\n  implementerToolsConfigStore.setState({ config });\n}\n\nfunction computeExtensionConfigs(\n  configState: ConfigInternalStore,\n  extensionState: ConfigExtensionStore,\n  tempConfigState: TemporaryConfigStore,\n) {\n  const configs = {};\n  // We assume that the module schema has already been defined, since the extension\n  // it contains is mounted.\n  for (let extension of extensionState.mountedExtensions) {\n    const config = computeExtensionConfig(\n      extension.slotModuleName,\n      extension.extensionModuleName,\n      extension.slotName,\n      extension.extensionId,\n      configState,\n      tempConfigState,\n    );\n\n    configs[extension.slotName] = {\n      ...configs[extension.slotName],\n      [extension.extensionId]: { config, loaded: true },\n    };\n  }\n  getExtensionsConfigStore().setState({ configs });\n}\n\n/*\n * API\n *\n */\n\n/**\n * This defines a configuration schema for a module. The schema tells the\n * configuration system how the module can be configured. It specifies\n * what makes configuration valid or invalid.\n *\n * See [Configuration System](https://o3-docs.openmrs.org/docs/configuration-system)\n * for more information about defining a config schema.\n *\n * @param moduleName Name of the module the schema is being defined for. Generally\n *   should be the one in which the `defineConfigSchema` call takes place.\n * @param schema The config schema for the module\n */\nexport function defineConfigSchema(moduleName: string, schema: ConfigSchema) {\n  validateConfigSchema(moduleName, schema);\n  const enhancedSchema = mergeDeepRight(schema, implicitConfigSchema) as ConfigSchema;\n\n  configInternalStore.setState((state) => ({\n    ...state,\n    schemas: { ...state.schemas, [moduleName]: enhancedSchema },\n    moduleLoaded: { ...state.moduleLoaded, [moduleName]: true },\n  }));\n}\n\n/**\n * This alerts the configuration system that a module exists. This allows config to be\n * processed, while still allowing the extension system to know whether the module has\n * actually had its front bundle executed yet.\n *\n * This should only be used in esm-app-shell.\n *\n * @internal\n * @param moduleName\n */\nexport function registerModuleWithConfigSystem(moduleName: string) {\n  const state = configInternalStore.getState();\n  configInternalStore.setState({\n    schemas: { ...state.schemas, [moduleName]: implicitConfigSchema },\n  });\n}\n\n/**\n * This allows the config system to support translation overrides for namespaces that\n * do not correspond to modules.\n *\n * This should only be used in esm-app-shell.\n *\n * @internal\n * @param namespace\n */\nexport function registerTranslationNamespace(namespace: string) {\n  const state = configInternalStore.getState();\n  configInternalStore.setState({\n    schemas: { ...state.schemas, [namespace]: translationOverridesSchema },\n  });\n}\n\n/**\n * This defines a configuration schema for an extension. When a schema is defined\n * for an extension, that extension will receive the configuration corresponding\n * to that schema, rather than the configuration corresponding to the module\n * in which it is defined.\n *\n * The schema tells the configuration system how the module can be configured.\n * It specifies what makes configuration valid or invalid.\n *\n * See [Configuration System](https://o3-docs.openmrs.org/docs/configuration-system)\n * for more information about defining a config schema.\n *\n * @param extensionName Name of the extension the schema is being defined for.\n *   Should match the `name` of one of the `extensions` entries being returned\n *   by `setupOpenMRS`.\n * @param schema The config schema for the extension\n */\nexport function defineExtensionConfigSchema(extensionName: string, schema: ConfigSchema) {\n  validateConfigSchema(extensionName, schema);\n  const enhancedSchema = mergeDeepRight(schema, implicitConfigSchema) as ConfigSchema;\n\n  const state = configInternalStore.getState();\n  if (state.schemas[extensionName]) {\n    console.error(\n      `Config schema for extension ${extensionName} already exists. If there are multiple extensions with this same name, one will probably crash.`,\n    );\n  }\n\n  configInternalStore.setState({\n    schemas: { ...state.schemas, [extensionName]: enhancedSchema },\n  });\n}\n\nexport function provide(config: Config, sourceName = 'provided') {\n  configInternalStore.setState((state) => ({\n    ...state,\n    providedConfigs: [...state.providedConfigs, { source: sourceName, config }],\n  }));\n}\n\n/**\n * A promise-based way to access the config as soon as it is fully loaded.\n * If it is already loaded, resolves the config in its present state.\n *\n * This is a useful function if you need to get the config in the course\n * of the execution of a function.\n *\n * @param moduleName The name of the module for which to look up the config\n */\nexport function getConfig<T = Record<string, any>>(moduleName: string): Promise<T> {\n  return new Promise<T>((resolve) => {\n    const store = getConfigStore(moduleName);\n    function update(state: ConfigStore) {\n      if (state.loaded && state.config) {\n        const config = omit(['Display conditions', 'Translation overrides'], state.config);\n        resolve(config as T);\n        unsubscribe && unsubscribe();\n      }\n    }\n    update(store.getState());\n    const unsubscribe = store.subscribe(update);\n  });\n}\n\n/** @internal */\nexport function getTranslationOverrides(\n  moduleName: string,\n  slotName?: string,\n  extensionId?: string,\n): Promise<Array<Record<string, Record<string, string>>>> {\n  const promises = [\n    new Promise<Record<string, Record<string, string>>>((resolve) => {\n      const configStore = getConfigStore(moduleName);\n      function update(state: ReturnType<(typeof configStore)['getState']>) {\n        if (state.translationOverridesLoaded && state.config) {\n          const translationOverrides = state.config['Translation overrides'] ?? {};\n          resolve(translationOverrides);\n          unsubscribe && unsubscribe();\n        }\n      }\n      update(configStore.getState());\n      const unsubscribe = configStore.subscribe(update);\n    }),\n  ];\n\n  if (slotName && extensionId) {\n    promises.push(\n      new Promise<Record<string, Record<string, string>>>((resolve) => {\n        const configStore = getExtensionConfig(slotName, extensionId);\n        function update(state: ReturnType<(typeof configStore)['getState']>) {\n          if (state.loaded && state.config) {\n            const translationOverrides = state.config['Translation overrides'] ?? {};\n            resolve(translationOverrides);\n            unsubscribe && unsubscribe();\n          }\n        }\n        update(configStore.getState());\n        const unsubscribe = configStore.subscribe(update);\n      }),\n    );\n  }\n\n  return Promise.all(promises);\n}\n\n/**\n * Validate and interpolate defaults for `providedConfig` according to `schema`\n *\n * @param schema  a configuration schema\n * @param providedConfig  an object of config values (without the top-level module name)\n * @param keyPathContext  a dot-deparated string which helps the user figure out where\n *     the provided config came from\n * @internal\n */\nexport function processConfig(schema: ConfigSchema, providedConfig: ConfigObject, keyPathContext: string) {\n  validateStructure(schema, providedConfig, keyPathContext);\n  const config = setDefaults(schema, providedConfig);\n  runAllValidatorsInConfigTree(schema, config, keyPathContext);\n  return config;\n}\n\n/*\n * Helper functions\n *\n */\n\n/**\n * Returns the configuration for an extension. This configuration is specific\n * to the slot in which it is mounted, and its ID within that slot.\n *\n * The schema for that configuration is the extension schema. If no extension\n * schema has been provided, the schema used is the schema of the module in\n * which the extension is defined.\n *\n * @param slotModuleName The name of the module which defines the extension slot\n * @param extensionModuleName The name of the module which defines the extension (and therefore the config schema)\n * @param slotName The name of the extension slot where the extension is mounted\n * @param extensionId The ID of the extension in its slot\n */\nfunction computeExtensionConfig(\n  slotModuleName: string,\n  extensionModuleName: string,\n  slotName: string,\n  extensionId: string,\n  configState: ConfigInternalStore,\n  tempConfigState: TemporaryConfigStore,\n) {\n  const extensionName = getExtensionNameFromId(extensionId);\n  const extensionConfigSchema = configState.schemas[extensionName];\n  const nameOfSchemaSource = extensionConfigSchema ? extensionName : extensionModuleName;\n  const providedConfigs = getProvidedConfigs(configState, tempConfigState);\n  const slotModuleConfig = mergeConfigsFor(slotModuleName, providedConfigs);\n  const configOverride = slotModuleConfig?.extensionSlots?.[slotName]?.configure?.[extensionId] ?? {};\n  const extensionConfig = mergeConfigsFor(nameOfSchemaSource, providedConfigs);\n  const combinedConfig = mergeConfigs([extensionConfig, configOverride]);\n  const schema = extensionConfigSchema ?? configState.schemas[extensionModuleName];\n  validateStructure(schema, combinedConfig, nameOfSchemaSource);\n  const config = setDefaults(schema, combinedConfig);\n  runAllValidatorsInConfigTree(schema, config, nameOfSchemaSource);\n  delete config.extensionSlots;\n  return config;\n}\n\nfunction getImplementerToolsConfig(\n  configState: ConfigInternalStore,\n  tempConfigState: TemporaryConfigStore,\n): Record<string, Config> {\n  let result = getSchemaWithValuesAndSources(clone(configState.schemas));\n  const configsAndSources = [\n    ...configState.providedConfigs.map((c) => [c.config, c.source]),\n    [tempConfigState.config, 'temporary config'],\n  ] as Array<[Config, string]>;\n  for (let [config, source] of configsAndSources) {\n    result = mergeConfigs([result, createValuesAndSourcesTree(config, source)]);\n  }\n  return result;\n}\n\nfunction getSchemaWithValuesAndSources(schema) {\n  if (schema.hasOwnProperty('_default')) {\n    return { ...schema, _value: schema._default, _source: 'default' };\n  } else if (isOrdinaryObject(schema)) {\n    return Object.keys(schema).reduce((obj, key) => {\n      obj[key] = getSchemaWithValuesAndSources(schema[key]);\n      return obj;\n    }, {});\n  } else {\n    // at this point, the schema is bad and an error will have been logged during schema validation\n    return {};\n  }\n}\n\nfunction createValuesAndSourcesTree(config: ConfigObject, source: string) {\n  if (isOrdinaryObject(config)) {\n    return Object.keys(config).reduce((obj, key) => {\n      obj[key] = createValuesAndSourcesTree(config[key], source);\n      return obj;\n    }, {});\n  } else {\n    return { _value: config, _source: source };\n  }\n}\n\nfunction getExtensionSlotConfigs(\n  configState: ConfigInternalStore,\n  tempConfigState: TemporaryConfigStore,\n): Record<string, ExtensionSlotConfigObject> {\n  const allConfigs = mergeConfigs(getProvidedConfigs(configState, tempConfigState));\n  const slotConfigPerModule: Record<string, Record<string, ExtensionSlotConfig>> = Object.keys(allConfigs).reduce(\n    (obj, key) => {\n      if (allConfigs[key]?.extensionSlots) {\n        obj[key] = allConfigs[key]?.extensionSlots;\n      }\n      return obj;\n    },\n    {},\n  );\n  validateAllExtensionSlotConfigs(slotConfigPerModule);\n  const slotConfigs = Object.keys(slotConfigPerModule).reduce((obj, key) => {\n    obj = { ...obj, ...slotConfigPerModule[key] };\n    return obj;\n  }, {});\n  return slotConfigs;\n}\n\nfunction validateAllExtensionSlotConfigs(slotConfigPerModule: Record<string, Record<string, ExtensionSlotConfig>>) {\n  for (let [moduleName, configBySlotName] of Object.entries(slotConfigPerModule)) {\n    for (let [slotName, config] of Object.entries(configBySlotName)) {\n      validateExtensionSlotConfig(config, moduleName, slotName);\n    }\n  }\n}\n\nfunction validateExtensionSlotConfig(config: ExtensionSlotConfig, moduleName: string, slotName: string): void {\n  const keyPath = `${moduleName}.extensionSlots.${slotName}`;\n  const errorPrefix = `Extension slot config '${keyPath}'`;\n  const invalidKeys = Object.keys(config).filter((k) => !['add', 'remove', 'order', 'configure'].includes(k));\n  if (invalidKeys.length) {\n    logError(keyPath, errorPrefix + `' contains invalid keys '${invalidKeys.join(\"', '\")}'`);\n  }\n  if (config.add) {\n    if (!Array.isArray(config.add) || !config.add.every((n) => typeof n === 'string')) {\n      logError(keyPath, errorPrefix + `.add' is invalid. Must be an array of strings (extension IDs)`);\n    }\n  }\n  if (config.remove) {\n    if (!Array.isArray(config.remove) || !config.remove.every((n) => typeof n === 'string')) {\n      logError(keyPath, errorPrefix + `.remove' is invalid. Must be an array of strings (extension IDs)`);\n    }\n  }\n  if (config.order) {\n    if (!Array.isArray(config.order) || !config.order.every((n) => typeof n === 'string')) {\n      logError(keyPath, errorPrefix + `.order' is invalid. Must be an array of strings (extension IDs)`);\n    }\n  }\n  if (config.configure) {\n    if (!isOrdinaryObject(config.configure)) {\n      logError(keyPath, errorPrefix + `.configure' is invalid. Must be an object with extension IDs for keys`);\n    }\n  }\n}\n\nfunction getProvidedConfigs(configState: ConfigInternalStore, tempConfigState: TemporaryConfigStore): Array<Config> {\n  return [...configState.providedConfigs.map((c) => c.config), tempConfigState.config];\n}\n\n/**\n * Validates the config schema for a module. Since problems identified here are programming errors\n * that hopefully will be caught during development, this function logs errors to the console directly;\n * it's fine if we spam the user with these errors.\n */\nfunction validateConfigSchema(moduleName: string, schema: ConfigSchema, keyPath = '') {\n  const updateMessage = `Please verify that you are running the latest version and, if so, alert the maintainer.`;\n\n  for (const key of Object.keys(schema).filter((k) => !k.startsWith('_'))) {\n    const thisKeyPath = keyPath + (keyPath && '.') + key;\n    const schemaPart = schema[key] as ConfigSchema;\n\n    if (thisKeyPath === 'Display conditions') {\n      console.error(\n        `${moduleName} declares a configuration option called \"Display conditions\"; the \"Display conditions\" option is a reserved name. ${updateMessage}`,\n      );\n    }\n\n    if (thisKeyPath === 'Translation overrides') {\n      console.error(\n        `${moduleName} declares a configuration option called \"Translation overrides\"; the \"Translation overrides\" option is a reserved name. ${updateMessage}`,\n      );\n    }\n\n    if (!isOrdinaryObject(schemaPart)) {\n      console.error(`${moduleName} has bad config schema definition for key '${thisKeyPath}'. ${updateMessage}`);\n      continue;\n    }\n\n    if (!schemaPart.hasOwnProperty('_default')) {\n      // recurse for nested config keys\n      validateConfigSchema(moduleName, schemaPart, thisKeyPath);\n    }\n\n    const elements = schemaPart._elements;\n    if (hasObjectSchema(elements)) {\n      validateConfigSchema(moduleName, elements, thisKeyPath + '._elements');\n    }\n\n    if (schemaPart._validators) {\n      for (let validator of schemaPart._validators) {\n        if (typeof validator !== 'function') {\n          console.error(\n            `${moduleName} has invalid validator for key '${thisKeyPath}' ${updateMessage}.` +\n              `\\n\\nIf you're the maintainer: validators must be functions that return either ` +\n              `undefined or an error string. Received ${validator}.`,\n          );\n        }\n      }\n    }\n\n    const valueType = schemaPart._type;\n    if (valueType && !Object.values(Type).includes(valueType)) {\n      console.error(\n        `${moduleName} has invalid type for key '${thisKeyPath}' ${updateMessage}.` +\n          `\\n\\nIf you're the maintainer: the allowed types are ${Object.values(Type).join(', ')}. ` +\n          `Received '${valueType}'`,\n      );\n    }\n\n    if (\n      Object.keys(schemaPart).every((k) => ['_description', '_validators', '_elements', '_type'].includes(k)) &&\n      !keyPath.includes('._elements')\n    ) {\n      console.error(\n        `${moduleName} has bad config schema definition for key '${thisKeyPath}'. ${updateMessage}.` +\n          `\\n\\nIf you're the maintainer: all config elements must have a default. ` +\n          `Received ${JSON.stringify(schemaPart)}`,\n      );\n    }\n\n    if (elements && valueType && ![Type.Array, Type.Object].includes(valueType)) {\n      console.error(\n        `${moduleName} has bad config schema definition for key '${thisKeyPath}'. ${updateMessage}.` +\n          `\\n\\nIf you're the maintainer: the 'elements' key only works with '_type' equal to 'Array' or 'Object'. ` +\n          `Received ${JSON.stringify(valueType)}`,\n      );\n    }\n  }\n}\n\nfunction getConfigForModule(\n  moduleName: string,\n  configState: ConfigInternalStore,\n  tempConfigState: TemporaryConfigStore,\n): ConfigObject {\n  const schema = configState.schemas[moduleName];\n  const inputConfig = mergeConfigsFor(moduleName, getProvidedConfigs(configState, tempConfigState));\n  validateStructure(schema, inputConfig, moduleName);\n  const config = setDefaults(schema, inputConfig);\n  runAllValidatorsInConfigTree(schema, config, moduleName);\n  delete config.extensionSlots;\n  return config;\n}\n\nfunction getConfigForModuleImplicitSchema(\n  moduleName: string,\n  configState: ConfigInternalStore,\n  tempConfigState: TemporaryConfigStore,\n): ConfigObject {\n  const inputConfig = mergeConfigsFor(moduleName, getProvidedConfigs(configState, tempConfigState));\n  const config = setDefaults(implicitConfigSchema, inputConfig);\n  runAllValidatorsInConfigTree(implicitConfigSchema, config, moduleName);\n  delete config.extensionSlots;\n  return config;\n}\n\nfunction mergeConfigsFor(moduleName: string, allConfigs: Array<Config>): ConfigObject {\n  const allConfigsForModule = allConfigs.map(({ [moduleName]: c }) => c).filter((c) => !!c);\n\n  return mergeConfigs(allConfigsForModule);\n}\n\nfunction mergeConfigs(configs: Array<Config>) {\n  const mergeDeepAll = reduce(mergeDeepRight);\n  return mergeDeepAll({}, configs) as Config;\n}\n\n/**\n * Recursively check the provided config tree to make sure that all\n * of the provided properties exist in the schema, and that types are\n * correct. Does not run validators yet, since those will be run on\n * the config with the defaults filled in.\n */\nfunction validateStructure(schema: ConfigSchema, config: ConfigObject, keyPath = '') {\n  // validate each constituent element\n  for (const key of Object.keys(config)) {\n    const value = config[key];\n    const thisKeyPath = keyPath + '.' + key;\n    const schemaPart = schema[key] as ConfigSchema;\n\n    if (!schema.hasOwnProperty(key)) {\n      if (!(key === 'extensionSlots' && keyPath !== '')) {\n        logError(thisKeyPath, `Unknown config key '${thisKeyPath}' provided. Ignoring.`);\n      }\n\n      continue;\n    }\n\n    validateBranchStructure(schemaPart, value, thisKeyPath);\n  }\n}\n\nfunction validateBranchStructure(schemaPart: ConfigSchema, value: any, keyPath: string) {\n  checkType(keyPath, schemaPart._type, value);\n\n  if (isOrdinaryObject(value)) {\n    if (schemaPart._type === Type.Object) {\n      // validate as freeform object\n      validateFreeformObjectStructure(schemaPart, value, keyPath);\n    } else if (!(schemaPart.hasOwnProperty('_default') || schemaPart.hasOwnProperty('_type'))) {\n      // validate as normal nested config\n      validateStructure(schemaPart, value, keyPath);\n    }\n  } else {\n    if (schemaPart._type === Type.Array) {\n      validateArrayStructure(schemaPart, value, keyPath);\n    }\n  }\n}\n\nfunction validateFreeformObjectStructure(freeformObjectSchema: ConfigSchema, config: ConfigObject, keyPath: string) {\n  if (freeformObjectSchema._elements) {\n    for (const key of Object.keys(config)) {\n      const value = config[key];\n      validateStructure(freeformObjectSchema._elements, value, `${keyPath}.${key}`);\n    }\n  }\n}\n\nfunction validateArrayStructure(arraySchema: ConfigSchema, value: ConfigObject, keyPath: string) {\n  const validatedAsArray = checkType(keyPath, Type.Array, value);\n  if (!validatedAsArray) {\n    return;\n  }\n  // if there is an array element object schema, verify that elements match it\n  if (hasObjectSchema(arraySchema._elements)) {\n    for (let i = 0; i < value.length; i++) {\n      validateBranchStructure(arraySchema._elements, value[i], `${keyPath}[${i}]`);\n    }\n  }\n\n  for (let i = 0; i < value.length; i++) {\n    checkType(`${keyPath}[${i}]`, arraySchema._elements?._type, value[i]);\n  }\n}\n\n/**\n * Run all the validators in the config tree. This should be run\n * on the config object after it has been filled in with all the defaults, since\n * higher-level validators may refer to default values.\n */\nfunction runAllValidatorsInConfigTree(schema: ConfigSchema, config: ConfigObject, keyPath = '') {\n  // If `!schema`, there should have been a structural validation error printed already.\n  if (schema) {\n    if (config !== schema._default) {\n      runValidators(keyPath, schema._validators, config);\n    }\n\n    if (isOrdinaryObject(config)) {\n      for (const key of Object.keys(config)) {\n        const value = config[key];\n        const thisKeyPath = keyPath + '.' + key;\n        const schemaPart = schema[key] as ConfigSchema;\n        if (schema._type === Type.Object && schema._elements) {\n          runAllValidatorsInConfigTree(schema._elements, value, thisKeyPath);\n        } else {\n          runAllValidatorsInConfigTree(schemaPart, value, thisKeyPath);\n        }\n      }\n    } else if (Array.isArray(config) && schema._elements) {\n      for (let i = 0; i < config.length; i++) {\n        runAllValidatorsInConfigTree(schema._elements, config[i], `${keyPath}[${i}]`);\n      }\n    }\n  }\n}\n\n/**\n * Run type validation for the value, logging any errors.\n * @returns true if validation passes, false otherwise\n */\nfunction checkType(keyPath: string, _type: Type | undefined, value: any) {\n  if (_type) {\n    const validator: Record<string, Function> = {\n      Array: isArray,\n      Boolean: isBoolean,\n      ConceptUuid: isUuid,\n      Number: isNumber,\n      Object: isObject,\n      String: isString,\n      UUID: isUuid,\n      PersonAttributeTypeUuid: isUuid,\n      PatientIdentifierTypeUuid: isUuid,\n    };\n    return runValidators(keyPath, [validator[_type]], value);\n  }\n  return true;\n}\n\n/**\n * Runs validators, logging errors.\n * @returns true if all pass, false otherwise.\n */\nfunction runValidators(keyPath: string, validators: Array<Function> | undefined, value: any) {\n  let returnValue = true;\n  if (validators) {\n    try {\n      for (let validator of validators) {\n        const validatorResult = validator(value);\n\n        if (typeof validatorResult === 'string') {\n          const message =\n            typeof value === 'object'\n              ? `Invalid configuration for ${keyPath}: ${validatorResult}`\n              : `Invalid configuration value ${value} for ${keyPath}: ${validatorResult}`;\n          logError(keyPath, message);\n          returnValue = false;\n        }\n      }\n    } catch (e) {\n      console.error(`Skipping invalid validator at \"${keyPath}\". Encountered error\\n\\t${e}`);\n    }\n  }\n  return returnValue;\n}\n\n// Recursively fill in the config with values from the schema.\nconst setDefaults = (schema: ConfigSchema, inputConfig: Config) => {\n  const config = clone(inputConfig);\n\n  if (!schema) {\n    return config;\n  }\n\n  for (const key of Object.keys(schema)) {\n    const configPart = config[key];\n    const schemaPart = schema[key] as ConfigSchema;\n\n    // The `schemaPart &&` clause of this `if` statement will only fail\n    // if the schema is very invalid. It is there to prevent the app from\n    // crashing completely, though it will produce unexpected behavior.\n    // If this happens, there should be legible errors in the console from\n    // the schema validator.\n    if (schemaPart && (schemaPart.hasOwnProperty('_type') || schemaPart.hasOwnProperty('_default'))) {\n      // We assume that schemaPart defines a config value, since it has\n      // a property `_type` or `_default`.\n      if (!config.hasOwnProperty(key)) {\n        (config[key] as any) = schemaPart['_default'];\n      }\n\n      // We also check if it is an object or array with object elements, in which case we recurse\n      const elements = schemaPart._elements;\n\n      if (configPart && hasObjectSchema(elements)) {\n        if (schemaPart._type === Type.Array && Array.isArray(configPart)) {\n          const configWithDefaults = configPart.map((conf: Config) => setDefaults(elements, conf));\n          config[key] = configWithDefaults;\n        } else if (schemaPart._type === Type.Object) {\n          for (let objectKey of Object.keys(configPart)) {\n            configPart[objectKey] = setDefaults(elements, configPart[objectKey]);\n          }\n        }\n      }\n    } else if (isOrdinaryObject(schemaPart)) {\n      // Since schemaPart has no property \"_type\", if it's an ordinary object\n      // (unlike, importantly, the validators array), we assume it is a parent config property.\n      // We recurse to config[key] and schema[key]. Default config[key] to {}.\n      const selectedConfigPart = configPart ?? {};\n\n      // There will have been a validation error already if configPart is not a plain object.\n      if (isOrdinaryObject(selectedConfigPart)) {\n        config[key] = setDefaults(schemaPart, selectedConfigPart);\n      }\n    }\n  }\n\n  return config;\n};\n\nfunction hasObjectSchema(elementsSchema: Object | undefined): elementsSchema is ConfigSchema {\n  return (\n    !!elementsSchema && Object.keys(elementsSchema).filter((e) => !['_default', '_validators'].includes(e)).length > 0\n  );\n}\n\nfunction isOrdinaryObject(value) {\n  return typeof value === 'object' && !Array.isArray(value) && value !== null;\n}\n\n/** Keep track of which validation errors we have displayed. Each one should only be displayed once. */\nconst displayedValidationMessages = new Set<string>();\n\nfunction logError(keyPath: string, message: string) {\n  const key = `${keyPath}:::${message}`;\n  if (!displayedValidationMessages.has(key)) {\n    console.error(message);\n    displayedValidationMessages.add(key);\n  }\n}\n\n/**\n * Normally, configuration errors are only displayed once. This function clears the list of\n * displayed errors, so that they will be displayed again.\n *\n * @internal\n */\nexport function clearConfigErrors(keyPath?: string) {\n  if (keyPath) {\n    displayedValidationMessages.forEach((key) => {\n      if (key.startsWith(keyPath)) {\n        displayedValidationMessages.delete(key);\n      }\n    });\n  } else {\n    displayedValidationMessages.clear();\n  }\n}\n\n/**\n * Copied over from esm-extensions. It rightly belongs to that module, but esm-config\n * cannot depend on esm-extensions.\n */\nfunction getExtensionNameFromId(extensionId: string) {\n  const [extensionName] = extensionId.split('#');\n  return extensionName;\n}\n\n/**\n * The translation overrides schema is used in the implicit schema given to every module;\n * plus any additional translation namespaces (at time of writing, this is just 'core').\n */\nconst translationOverridesSchema: ConfigSchema = {\n  'Translation overrides': {\n    _description:\n      'Per-language overrides for frontend translations should be keyed by language code and each language dictionary contains the translation key and the display value',\n    _type: Type.Object,\n    _default: {},\n    _validators: [\n      validator(\n        (o) => Object.keys(o).every((k) => /^[a-z]{2,3}(-[A-Z]{2,3})?$/.test(k)),\n        (o) => {\n          const badKeys = Object.keys(o).filter((k) => !/^[a-z]{2,3}(-[A-Z]{2,3})?$/.test(k));\n          return `The 'Translation overrides' object should have language codes for keys. Language codes must be in the form of a two-to-three letter language code optionally followed by a hyphen and a two-to-three letter country code. The following keys do not conform: ${badKeys.join(\n            ', ',\n          )}.`;\n        },\n      ),\n    ],\n  },\n};\n\n/**\n * The implicitConfigSchema is implicitly included in every configuration schema\n */\nconst implicitConfigSchema: ConfigSchema = {\n  'Display conditions': {\n    privileges: {\n      _description: 'The privilege(s) the user must have to use this extension',\n      _type: Type.Array,\n      _default: [],\n    },\n  },\n  ...translationOverridesSchema,\n};\n","/** @module @category Config Validation */\nimport { validator } from './validator';\n\n/**\n * Verifies that the value is between the provided minimum and maximum\n *\n * @param min Minimum acceptable value\n * @param max Maximum acceptable value\n */\nexport const inRange = (min: number, max: number) => {\n  return validator((val) => min <= val && val <= max, `must be between ${min} and ${max}`);\n};\n\n/**\n * Verifies that a string contains only the default URL template\n * parameters, plus any specified in `allowedTemplateParameters`.\n *\n * @param allowedTemplateParameters To be added to `openmrsBase` and `openmrsSpaBase`\n * @category Navigation\n */\nexport const isUrlWithTemplateParameters = (allowedTemplateParameters: Array<string> | readonly string[]) => {\n  const allowedParams = allowedTemplateParameters.concat(['openmrsBase', 'openmrsSpaBase']);\n  return validator(\n    (val) => {\n      if (!val || typeof val != 'string') {\n        return false;\n      }\n\n      const rx = /\\${(.*?)}/g;\n      let match = rx.exec(val);\n\n      while (match) {\n        if (!allowedParams.includes(match[1])) {\n          return false;\n        }\n\n        match = rx.exec(val);\n      }\n\n      return true;\n    },\n    'Should be a URL or path. The allowed template parameters are ' +\n      allowedParams.map((p) => '${' + p + '}').join(', '),\n  );\n};\n\n/**\n * Verifies that a string contains only the default URL template parameters.\n *\n * @category Navigation\n */\nexport const isUrl = isUrlWithTemplateParameters([]);\n\n/**\n * Verifies that the value is one of the allowed options.\n * @param allowedValues The list of allowable values\n */\nexport const oneOf = (allowedValues: Array<any> | readonly any[]) => {\n  return validator(\n    (val) => allowedValues.includes(val),\n    `Must be one of the following: '${allowedValues.join(\"', '\")}'.`,\n  );\n};\n\nexport const validators = {\n  inRange,\n  isUrl,\n  isUrlWithTemplateParameters,\n  oneOf,\n};\n"],"names":["module","exports","__WEBPACK_EXTERNAL_MODULE__685__","__WEBPACK_EXTERNAL_MODULE__618__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","_isPlaceholder","a","_curry1","fn","f1","arguments","length","apply","this","_curry2","f2","b","_b","_a","_arrayFromIterator","iter","next","list","done","push","_includesWith","pred","x","idx","len","_has","is","toString","_isArguments","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","item","keys","nIdx","ks","checkArgsLength","val","slice","_uniqContentEquals","aIterator","bIterator","stackA","stackB","eq","_equals","aItem","f","match","typeA","equals","constructor","String","valueOf","name","message","source","global","ignoreCase","multiline","sticky","unicode","size","entries","concat","values","keysA","extendedStackA","extendedStackB","_curry3","f3","c","_c","_isObject","l","k","result","mergeDeepWithKey","lObj","rObj","lVal","rVal","names","index","_clone","refFrom","refTo","deep","pattern","copy","copiedValue","Date","RegExp","clone","Array","isArray","_isArray","_isString","nodeType","XWrap","Error","acc","bind","thisObj","n","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","_arity","_iterableReduce","xf","step","_methodReduce","methodName","symIterator","iterator","_reduce","_xwrap","_arrayReduce","reduce","TypeError","validator","validationFunction","Type","Boolean","ConceptUuid","Number","UUID","PersonAttributeTypeUuid","PatientIdentifierTypeUuid","isBoolean","isNumber","isString","isObject","isUuid","test","configInternalStore","createGlobalStore","providedConfigs","schemas","moduleLoaded","temporaryConfigStore","config","JSON","parse","localStorage","getItem","e","getTemporaryConfig","subscribe","state","setItem","stringify","configExtensionStore","mountedExtensions","getConfigStore","moduleName","getGlobalStore","loaded","translationOverridesLoaded","getExtensionSlotsConfigStore","slots","getExtensionSlotConfig","slotName","getExtensionSlotConfigFromStore","getState","slotConfig","getExtensionsConfigStore","configs","getExtensionConfig","extensionId","extensionConfigStore","selector","configStore","getInitialState","setState","partial","replace","newState","assign","listener","prevState","oldState","shallowEqual","destroy","getExtensionConfigFromStore","extensionConfig","implementerToolsConfigStore","computeModuleConfig","tempState","moduleStore","getConfigForModule","getConfigForModuleImplicitSchema","computeExtensionSlotConfigs","allConfigs","slotConfigPerModule","slotConfigs","mergeConfigs","getProvidedConfigs","configBySlotName","validateExtensionSlotConfig","validateAllExtensionSlotConfigs","extensionSlots","newSlotStoreEntries","fromEntries","map","slotStore","computeImplementerToolsConfig","tempConfigState","configState","getSchemaWithValuesAndSources","configsAndSources","createValuesAndSourcesTree","getImplementerToolsConfig","computeExtensionConfigs","extensionState","extension","computeExtensionConfig","slotModuleName","extensionModuleName","defineConfigSchema","schema","validateConfigSchema","enhancedSchema","mergeDeepRight","implicitConfigSchema","registerModuleWithConfigSystem","registerTranslationNamespace","namespace","translationOverridesSchema","defineExtensionConfigSchema","extensionName","console","error","provide","sourceName","getConfig","Promise","resolve","update","omit","unsubscribe","store","getTranslationOverrides","promises","translationOverrides","all","processConfig","providedConfig","keyPathContext","validateStructure","setDefaults","runAllValidatorsInConfigTree","slotModuleConfig","split","getExtensionNameFromId","extensionConfigSchema","nameOfSchemaSource","mergeConfigsFor","configOverride","configure","combinedConfig","_value","_default","_source","isOrdinaryObject","keyPath","errorPrefix","invalidKeys","filter","includes","logError","join","add","every","remove","order","updateMessage","thisKeyPath","schemaPart","elements","_elements","hasObjectSchema","_validators","valueType","_type","startsWith","inputConfig","mergeDeepAll","validateBranchStructure","checkType","freeformObjectSchema","validateFreeformObjectStructure","arraySchema","i","validateArrayStructure","runValidators","validators","returnValue","validatorResult","configPart","configWithDefaults","conf","objectKey","selectedConfigPart","elementsSchema","displayedValidationMessages","Set","has","clearConfigErrors","forEach","delete","clear","_description","badKeys","privileges","inRange","min","max","isUrlWithTemplateParameters","allowedTemplateParameters","allowedParams","rx","exec","p","isUrl","oneOf","allowedValues"],"sourceRoot":""}